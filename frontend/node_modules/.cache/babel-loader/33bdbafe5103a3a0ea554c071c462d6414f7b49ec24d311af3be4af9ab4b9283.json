{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inz15\\\\Desktop\\\\comp\\\\comp\\\\frontend\\\\src\\\\components\\\\Authorisedroute.js\",\n  _s = $RefreshSig$();\nimport { jwtDecode } from 'jwt-decode';\nimport api from '../api';\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from '../constants';\nimport { Navigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Authorisedroute({\n  children\n}) {\n  _s();\n  const [authorised, setAuthorised] = useState(null);\n  useEffect(() => {\n    auth().catch(() => setAuthorised(false));\n  }, []);\n  const refreshtoken = async () => {\n    const refreshtoken = localStorage.getItem(REFRESH_TOKEN);\n    try {\n      const res = await api.post('/applicant/token/refresh/', {\n        refresh: refreshtoken\n      });\n      if (res.status === 200) {\n        const {\n          access\n        } = res.data;\n        localStorage.setItem(ACCESS_TOKEN, access);\n        setAuthorised(true);\n      } else {\n        setAuthorised(false);\n      }\n    } catch {\n      setAuthorised(false);\n      console.log(\"Error refreshing token\");\n    }\n  };\n  const auth = async () => {\n    const token = localStorage.getItem(ACCESS_TOKEN);\n    if (!token) {\n      setAuthorised(false);\n      return;\n    }\n    const jwtdecode = jwtDecode(token);\n    const expiryoftoken = jwtdecode.exp;\n    const now = Date.now() / 1000;\n    if (expiryoftoken < now) {\n      await refreshtoken();\n    } else {\n      setAuthorised(true);\n    }\n  };\n  if (authorised === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n  return authorised ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 36\n  }, this);\n}\n_s(Authorisedroute, \"i8hKrUVIFsFXrUHQYzMvv5oCmX4=\");\n_c = Authorisedroute;\nexport default Authorisedroute;\nvar _c;\n$RefreshReg$(_c, \"Authorisedroute\");","map":{"version":3,"names":["jwtDecode","api","ACCESS_TOKEN","REFRESH_TOKEN","Navigate","useState","useEffect","jsxDEV","_jsxDEV","Authorisedroute","children","_s","authorised","setAuthorised","auth","catch","refreshtoken","localStorage","getItem","res","post","refresh","status","access","data","setItem","console","log","token","jwtdecode","expiryoftoken","exp","now","Date","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/inz15/Desktop/comp/comp/frontend/src/components/Authorisedroute.js"],"sourcesContent":["import {jwtDecode} from 'jwt-decode';\r\nimport api from '../api';\r\nimport {ACCESS_TOKEN, REFRESH_TOKEN} from '../constants';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Authorisedroute({children}) {\r\n    const [authorised, setAuthorised] = useState(null);\r\n    useEffect(() => {\r\n        auth().catch(() => setAuthorised(false));\r\n    }, []);\r\n    const refreshtoken = async () => {\r\n        const refreshtoken = localStorage.getItem(REFRESH_TOKEN);\r\n        try {\r\n            const res = await api.post('/applicant/token/refresh/', {refresh: refreshtoken});\r\n            if (res.status === 200) {\r\n                const {access} = res.data;\r\n                localStorage.setItem(ACCESS_TOKEN, access);\r\n                setAuthorised(true);\r\n            } else {\r\n                setAuthorised(false);\r\n            }\r\n        } catch {\r\n            setAuthorised(false);\r\n            console.log(\"Error refreshing token\");\r\n        }\r\n    }\r\n    const auth = async () => {\r\n        const token = localStorage.getItem(ACCESS_TOKEN);\r\n        if (!token) {\r\n            setAuthorised(false);\r\n            return;\r\n        }\r\n        const jwtdecode = jwtDecode(token);\r\n        const expiryoftoken = jwtdecode.exp\r\n        const now = Date.now() / 1000;\r\n\r\n        if (expiryoftoken < now) {\r\n            await refreshtoken();\r\n\r\n        } else {\r\n            setAuthorised(true);\r\n        }\r\n\r\n    }\r\n    if (authorised === null) {\r\n        return <div>Loading...</div>\r\n    }\r\n    return authorised ? children : <Navigate to=\"/login\" />;\r\n}\r\n\r\nexport default Authorisedroute;"],"mappings":";;AAAA,SAAQA,SAAS,QAAO,YAAY;AACpC,OAAOC,GAAG,MAAM,QAAQ;AACxB,SAAQC,YAAY,EAAEC,aAAa,QAAO,cAAc;AACxD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,eAAeA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAClDC,SAAS,CAAC,MAAM;IACZQ,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAMF,aAAa,CAAC,KAAK,CAAC,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EACN,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMA,YAAY,GAAGC,YAAY,CAACC,OAAO,CAACf,aAAa,CAAC;IACxD,IAAI;MACA,MAAMgB,GAAG,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,2BAA2B,EAAE;QAACC,OAAO,EAAEL;MAAY,CAAC,CAAC;MAChF,IAAIG,GAAG,CAACG,MAAM,KAAK,GAAG,EAAE;QACpB,MAAM;UAACC;QAAM,CAAC,GAAGJ,GAAG,CAACK,IAAI;QACzBP,YAAY,CAACQ,OAAO,CAACvB,YAAY,EAAEqB,MAAM,CAAC;QAC1CV,aAAa,CAAC,IAAI,CAAC;MACvB,CAAC,MAAM;QACHA,aAAa,CAAC,KAAK,CAAC;MACxB;IACJ,CAAC,CAAC,MAAM;MACJA,aAAa,CAAC,KAAK,CAAC;MACpBa,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACzC;EACJ,CAAC;EACD,MAAMb,IAAI,GAAG,MAAAA,CAAA,KAAY;IACrB,MAAMc,KAAK,GAAGX,YAAY,CAACC,OAAO,CAAChB,YAAY,CAAC;IAChD,IAAI,CAAC0B,KAAK,EAAE;MACRf,aAAa,CAAC,KAAK,CAAC;MACpB;IACJ;IACA,MAAMgB,SAAS,GAAG7B,SAAS,CAAC4B,KAAK,CAAC;IAClC,MAAME,aAAa,GAAGD,SAAS,CAACE,GAAG;IACnC,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC,GAAG,IAAI;IAE7B,IAAIF,aAAa,GAAGE,GAAG,EAAE;MACrB,MAAMhB,YAAY,CAAC,CAAC;IAExB,CAAC,MAAM;MACHH,aAAa,CAAC,IAAI,CAAC;IACvB;EAEJ,CAAC;EACD,IAAID,UAAU,KAAK,IAAI,EAAE;IACrB,oBAAOJ,OAAA;MAAAE,QAAA,EAAK;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EACA,OAAOzB,UAAU,GAAGF,QAAQ,gBAAGF,OAAA,CAACJ,QAAQ;IAACkC,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3D;AAAC1B,EAAA,CA3CQF,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AA6CxB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}