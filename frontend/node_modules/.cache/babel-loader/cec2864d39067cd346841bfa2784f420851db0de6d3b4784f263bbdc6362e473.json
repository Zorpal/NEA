{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inz15\\\\Desktop\\\\comp\\\\comp\\\\frontend\\\\src\\\\webpages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport GoogleSSO from \"../components/GoogleSSO\";\nimport { useNavigate } from \"react-router-dom\";\n\n//Function to allow the applicant or employee to login using the same webpage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [userlogin, setuserlogin] = useState([]);\n  const navigate = useNavigate();\n  const completelogin = async () => {\n    const usernameLength = userlogin.username.length;\n    const encryptedPassword = encryptpassword(userlogin.password, usernameLength); //this password is shifted using a caesar shift that shifts based on the length of the username\n    const response = await fetch(\"/applicant/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ...userlogin,\n        password: encryptedPassword\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      localStorage.setItem(\"access_token\", data.access);\n      localStorage.setItem(\"refresh_token\", data.refresh);\n\n      //fetches the is_staff attribute of the logged in user, if it is set to true in the database, this user is treated as an employee\n      const staffResponse = await fetch(\"/applicant/retrieve-staff-status\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${data.access}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (staffResponse.ok) {\n        const staffData = await staffResponse.json();\n        if (staffData.is_staff === true) {\n          navigate(\"/employee/home/\");\n        } else {\n          navigate(\"/\");\n        }\n        window.location.reload();\n      }\n    }\n  };\n  const input = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setuserlogin({\n      ...userlogin,\n      [name]: value\n    });\n  };\n  const submit = e => {\n    e.preventDefault();\n    completelogin();\n  };\n  const encryptpassword = (text, shift) => {\n    return text.split('').map(char => {\n      const code = char.charCodeAt(0);\n      return String.fromCharCode(code + shift);\n    }).join('');\n  };\n\n  //renders the login form, and a sign in with google button \n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"container-sm w-25\",\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        className: \"form-label\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: input,\n        type: \"username\",\n        className: \"form-control\",\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailHelp\",\n        className: \"form-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: \"form-label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: input,\n        type: \"password\",\n        className: \"form-control\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Or continue with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleSSO, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OwHrskvrJXHZzzLE/3NN6EpP8jo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","GoogleSSO","useNavigate","jsxDEV","_jsxDEV","Login","_s","userlogin","setuserlogin","navigate","completelogin","usernameLength","username","length","encryptedPassword","encryptpassword","password","response","fetch","method","headers","body","JSON","stringify","ok","data","json","localStorage","setItem","access","refresh","staffResponse","Authorization","staffData","is_staff","window","location","reload","input","e","name","value","target","submit","preventDefault","text","shift","split","map","char","code","charCodeAt","String","fromCharCode","join","className","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","id","_c","$RefreshReg$"],"sources":["C:/Users/inz15/Desktop/comp/comp/frontend/src/webpages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport GoogleSSO from \"../components/GoogleSSO\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Function to allow the applicant or employee to login using the same webpage\r\nconst Login = () => {\r\n  const [userlogin, setuserlogin] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const completelogin = async () => {\r\n    const usernameLength = userlogin.username.length;\r\n    const encryptedPassword = encryptpassword(userlogin.password, usernameLength); //this password is shifted using a caesar shift that shifts based on the length of the username\r\n    const response = await fetch(\"/applicant/token/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({...userlogin, password: encryptedPassword}),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      localStorage.setItem(\"access_token\", data.access);\r\n      localStorage.setItem(\"refresh_token\", data.refresh);\r\n\r\n      //fetches the is_staff attribute of the logged in user, if it is set to true in the database, this user is treated as an employee\r\n      const staffResponse = await fetch(\"/applicant/retrieve-staff-status\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${data.access}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (staffResponse.ok) {\r\n        const staffData = await staffResponse.json();\r\n        if (staffData.is_staff === true) {\r\n          navigate(\"/employee/home/\");\r\n        } else {\r\n          navigate(\"/\");\r\n        }\r\n        window.location.reload();\r\n      }\r\n    }\r\n  };\r\n\r\n  const input = (e) => {\r\n    const { name, value } = e.target;\r\n    setuserlogin({\r\n      ...userlogin,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    completelogin();\r\n  };\r\n  const encryptpassword = (text, shift) => {\r\n    return text.split('').map(char => {\r\n      const code = char.charCodeAt(0);\r\n      return String.fromCharCode(code + shift);\r\n    }).join('');\r\n  };\r\n\r\n  //renders the login form, and a sign in with google button \r\n  return (\r\n    <form className=\"container-sm w-25\" onSubmit={submit}>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"username\" className=\"form-label\">\r\n          Username\r\n        </label>\r\n        <input\r\n          onChange={input}\r\n          type=\"username\"\r\n          className=\"form-control\"\r\n          name=\"username\"\r\n        />\r\n        <div id=\"emailHelp\" className=\"form-text\"></div>\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"password\" className=\"form-label\">\r\n          Password\r\n        </label>\r\n        <input\r\n          onChange={input}\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          name=\"password\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Login\r\n      </button>\r\n      <div className=\"mt-3 text-center\">\r\n        <p>Or continue with Google</p>\r\n        <GoogleSSO />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}