{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inz15\\\\Desktop\\\\comp\\\\comp\\\\frontend\\\\src\\\\webpages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport GoogleSSO from \"../components/GoogleSSO\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [userlogin, setuserlogin] = useState([]);\n  const navigate = useNavigate();\n  const completelogin = async () => {\n    const response = await fetch('/applicant/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userlogin)\n    });\n    if (response.ok) {\n      const data = await response.json();\n      localStorage.setItem('access_token', data.access);\n      localStorage.setItem('refresh_token', data.refresh);\n\n      // Check staff status\n      const staffResponse = await fetch('/applicant/retrieve-staff-status', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${data.access}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (staffResponse.ok) {\n        const staffData = await staffResponse.json();\n        if (staffData.is_staff === 1) {\n          navigate('/Jobs/List/');\n        } else {\n          navigate('/');\n        }\n        window.location.reload();\n      }\n    }\n  };\n  const input = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setuserlogin({\n      ...userlogin,\n      [name]: value\n    });\n  };\n  const submit = e => {\n    e.preventDefault();\n    completelogin();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"container-sm w-25\",\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        className: \"form-label\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: input,\n        type: \"username\",\n        className: \"form-control\",\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailHelp\",\n        className: \"form-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: \"form-label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: input,\n        type: \"password\",\n        className: \"form-control\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(GoogleSSO, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"HHQHGdo3G3iq84ukt7xW3yotdVg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","GoogleSSO","useNavigate","jsxDEV","_jsxDEV","Login","_s","userlogin","setuserlogin","navigate","completelogin","response","fetch","method","headers","body","JSON","stringify","ok","data","json","localStorage","setItem","access","refresh","staffResponse","staffData","is_staff","window","location","reload","input","e","name","value","target","submit","preventDefault","className","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","id","_c","$RefreshReg$"],"sources":["C:/Users/inz15/Desktop/comp/comp/frontend/src/webpages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport GoogleSSO from \"../components/GoogleSSO\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const [userlogin, setuserlogin ] = useState([])\r\n  const navigate = useNavigate()\r\n  \r\n  const completelogin = async() => {\r\n    const response = await fetch('/applicant/token/', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userlogin)\r\n    })\r\n\r\n    if (response.ok) {\r\n    const data = await response.json()\r\n    localStorage.setItem('access_token', data.access)\r\n    localStorage.setItem('refresh_token', data.refresh)\r\n\r\n    // Check staff status\r\n    const staffResponse = await fetch('/applicant/retrieve-staff-status', {\r\n      method: 'GET',\r\n      headers: {\r\n      'Authorization': `Bearer ${data.access}`,\r\n      'Content-Type': 'application/json',\r\n      }\r\n    })\r\n\r\n    if (staffResponse.ok) {\r\n      const staffData = await staffResponse.json()\r\n      if (staffData.is_staff === 1) {\r\n      navigate('/Jobs/List/')\r\n      } else {\r\n      navigate('/')\r\n      }\r\n      window.location.reload()\r\n    }\r\n    }\r\n  }\r\n\r\n  const input = (e) => {\r\n    const {name, value} = e.target\r\n    setuserlogin({\r\n    ...userlogin,\r\n    [name]: value\r\n    })\r\n  }\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault()\r\n    completelogin()\r\n  }\r\n\r\n  return (\r\n    <form className=\"container-sm w-25\" onSubmit={submit}> \r\n    <div className=\"mb-3\">\r\n      <label htmlFor=\"username\" className=\"form-label\">\r\n      Username\r\n      </label>\r\n      <input\r\n      onChange={input}\r\n      type=\"username\"\r\n      className=\"form-control\"\r\n      name=\"username\"\r\n      />\r\n      <div id=\"emailHelp\" className=\"form-text\">\r\n      </div>\r\n    </div>\r\n    <div className=\"mb-3\">\r\n      <label htmlFor=\"password\" className=\"form-label\">\r\n      Password\r\n      </label>\r\n      <input\r\n      onChange={input}\r\n      type=\"password\"\r\n      className=\"form-control\"\r\n      name=\"password\"\r\n      />\r\n    </div>\r\n    <button type=\"submit\" className=\"btn btn-primary\">\r\n      Login\r\n    </button>\r\n    <GoogleSSO />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}