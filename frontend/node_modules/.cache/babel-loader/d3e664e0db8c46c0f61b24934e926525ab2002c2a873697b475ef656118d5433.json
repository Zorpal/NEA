{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inz15\\\\Desktop\\\\comp\\\\comp\\\\frontend\\\\src\\\\webpages\\\\JobDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobDetails = () => {\n  _s();\n  const {\n    jobId\n  } = useParams();\n  const [job, setJob] = useState({});\n  const [isStaff, setIsStaff] = useState(false);\n  const [applicants, setApplicants] = useState([]);\n  useEffect(() => {\n    const retrievestaffstatus = async () => {\n      const token = localStorage.getItem(\"access_token\");\n      if (token) {\n        const response = await fetch(\"/applicant/retrieve-staff-status\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setIsStaff(data.is_staff);\n        }\n      }\n    };\n    retrievestaffstatus();\n  }, []);\n  const getJob = () => {\n    fetch(`/Jobs/List/${jobId}`).then(response => response.json()).then(data => {\n      setJob(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const getApplicants = () => {\n    fetch(`/applicants/skills/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        primarySkill: job.jobprimaryskill,\n        secondarySkill: job.jobsecondaryskill\n      })\n    }).then(response => response.json()).then(data => {\n      setApplicants(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  useEffect(() => {\n    if (jobId) {\n      getJob();\n    }\n  }, [jobId]);\n  useEffect(() => {\n    if (isStaff && job.jobprimaryskill && job.jobsecondaryskill) {\n      getApplicants();\n    }\n  }, [isStaff, job]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [job.jobtitle, \" - Job at \", job.companyname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Job Type: \", job.jobtype]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Salary: \\xA3\", job.salary]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Job Description: \", job.jobdescription]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Location: \", job.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Date listing was posted: \", job.dateposted]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Deadline to apply: \", job.deadline]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Sought skills: \", job.jobprimaryskill, \", \", job.jobsecondaryskill]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), isStaff && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Applicants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: applicants.map((applicant, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: applicant.email\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(JobDetails, \"QeikxiTUTEtGsg6SUiVushwrHy0=\", false, function () {\n  return [useParams];\n});\n_c = JobDetails;\nexport default JobDetails;\nvar _c;\n$RefreshReg$(_c, \"JobDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","JobDetails","_s","jobId","job","setJob","isStaff","setIsStaff","applicants","setApplicants","retrievestaffstatus","token","localStorage","getItem","response","fetch","method","headers","Authorization","ok","data","json","is_staff","getJob","then","catch","error","console","log","getApplicants","body","JSON","stringify","primarySkill","jobprimaryskill","secondarySkill","jobsecondaryskill","className","children","jobtitle","companyname","fileName","_jsxFileName","lineNumber","columnNumber","jobtype","salary","jobdescription","location","dateposted","deadline","map","applicant","index","email","_c","$RefreshReg$"],"sources":["C:/Users/inz15/Desktop/comp/comp/frontend/src/webpages/JobDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst JobDetails = () => {\r\n  const { jobId } = useParams();\r\n  const [job, setJob] = useState({});\r\n  const [isStaff, setIsStaff] = useState(false);\r\n  const [applicants, setApplicants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const retrievestaffstatus = async () => {\r\n      const token = localStorage.getItem(\"access_token\");\r\n      if (token) {\r\n        const response = await fetch(\"/applicant/retrieve-staff-status\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setIsStaff(data.is_staff);\r\n        }\r\n      }\r\n    }\r\n    retrievestaffstatus();\r\n  }, []);\r\n\r\n  const getJob = () => {\r\n    fetch(`/Jobs/List/${jobId}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setJob(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getApplicants = () => {\r\n    fetch(`/applicants/skills/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        primarySkill: job.jobprimaryskill,\r\n        secondarySkill: job.jobsecondaryskill,\r\n      }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setApplicants(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (jobId) {\r\n      getJob();\r\n    }\r\n  }, [jobId]);\r\n\r\n  useEffect(() => {\r\n    if (isStaff && job.jobprimaryskill && job.jobsecondaryskill) {\r\n      getApplicants();\r\n    }\r\n  }, [isStaff, job]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">{job.jobtitle} - Job at {job.companyname}</div>\r\n            <div className=\"card-body\">\r\n              <p className=\"card-text\">\r\n                Job Type: {job.jobtype}\r\n              </p>\r\n              <p className=\"card-text\">\r\n                Salary: £{job.salary}\r\n              </p>\r\n              <p className=\"card-text\">\r\n                Job Description: {job.jobdescription}\r\n              </p>\r\n              <p className=\"card-text\">\r\n                Location: {job.location}\r\n              </p>\r\n              <p className=\"card-text\">\r\n                Date listing was posted: {job.dateposted}\r\n              </p>\r\n              <p className=\"card-text\">\r\n                Deadline to apply: {job.deadline}\r\n              </p>\r\n              <p className=\"card-text\">\r\n                Sought skills: {job.jobprimaryskill}, {job.jobsecondaryskill}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {isStaff && (\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">Applicants</div>\r\n              <div className=\"card-body\">\r\n                <ul className=\"list-group\">\r\n                  {applicants.map((applicant, index) => (\r\n                    <li key={index} className=\"list-group-item\">\r\n                      {applicant.email}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}