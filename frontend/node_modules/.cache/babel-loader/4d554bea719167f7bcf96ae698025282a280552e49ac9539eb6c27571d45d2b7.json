{"ast":null,"code":"var _jsxFileName = \"/Users/rxndal/NEA2/frontend/src/webpages/JobDetails.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobDetails = ({\n  id\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Job Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Job ID: \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Job Title: \", job.jobtitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = JobDetails;\nconst ListofJobs = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const getJobs = () => {\n    fetch(\"/Jobs/List/\").then(response => response.json()).then(data => {\n      setJobs(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  useEffect(() => {\n    getJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"list-group\",\n      children: jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        class: \"list-group-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/Jobs/${job.id}/`,\n          children: [job.id, job.jobtitle]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(JobDetails, {\n      id: jobs[0].id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ListofJobs, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c2 = ListofJobs;\nexport default JobDetails;\nvar _c, _c2;\n$RefreshReg$(_c, \"JobDetails\");\n$RefreshReg$(_c2, \"ListofJobs\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","JobDetails","id","children","fileName","_jsxFileName","lineNumber","columnNumber","job","jobtitle","_c","ListofJobs","_s","jobs","setJobs","useState","getJobs","fetch","then","response","json","data","catch","error","console","log","useEffect","class","map","index","to","_c2","$RefreshReg$"],"sources":["/Users/rxndal/NEA2/frontend/src/webpages/JobDetails.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst JobDetails = ({ id }) => {\n  return (\n    <div>\n      <h1>Job Details</h1>\n      <p>Job ID: {id}</p>\n      <p>Job Title: {job.jobtitle}</p>\n    </div>\n  );\n};\n\nconst ListofJobs = () => {\n  const [jobs, setJobs] = useState([]);\n\n  const getJobs = () => {\n    fetch(\"/Jobs/List/\")\n      .then((response) => response.json())\n      .then((data) => {\n        setJobs(data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    getJobs();\n  }, []);\n\n  return (\n    <div>\n      <ul class=\"list-group\">\n        {jobs.map((job, index) => (\n          <li key={index} class=\"list-group-item\">\n            <Link to={`/Jobs/${job.id}/`}>\n              {job.id}\n              {job.jobtitle}\n            </Link>\n          </li>\n        ))}\n      </ul>\n\n      {/* Assuming the JobDetails component is correct */}\n      <JobDetails id={jobs[0].id} />\n    </div>\n  );\n};\n\nexport default JobDetails;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAG,CAAC,KAAK;EAC7B,oBACEF,OAAA;IAAAG,QAAA,gBACEH,OAAA;MAAAG,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBP,OAAA;MAAAG,QAAA,GAAG,UAAQ,EAACD,EAAE;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBP,OAAA;MAAAG,QAAA,GAAG,aAAW,EAACK,GAAG,CAACC,QAAQ;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC;AAACG,EAAA,GARIT,UAAU;AAUhB,MAAMU,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBC,KAAK,CAAC,aAAa,CAAC,CACjBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdP,OAAO,CAACO,IAAI,CAAC;IACf,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAEDG,SAAS,CAAC,MAAM;IACdV,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAAG,QAAA,gBACEH,OAAA;MAAI2B,KAAK,EAAC,YAAY;MAAAxB,QAAA,EACnBU,IAAI,CAACe,GAAG,CAAC,CAACpB,GAAG,EAAEqB,KAAK,kBACnB7B,OAAA;QAAgB2B,KAAK,EAAC,iBAAiB;QAAAxB,QAAA,eACrCH,OAAA,CAACF,IAAI;UAACgC,EAAE,EAAE,SAAStB,GAAG,CAACN,EAAE,GAAI;UAAAC,QAAA,GAC1BK,GAAG,CAACN,EAAE,EACNM,GAAG,CAACC,QAAQ;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC,GAJAsB,KAAK;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAGLP,OAAA,CAACC,UAAU;MAACC,EAAE,EAAEW,IAAI,CAAC,CAAC,CAAC,CAACX;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV,CAAC;AAACK,EAAA,CAnCID,UAAU;AAAAoB,GAAA,GAAVpB,UAAU;AAqChB,eAAeV,UAAU;AAAC,IAAAS,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}